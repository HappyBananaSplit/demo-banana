version: 2.1

orbs:
  snyk: snyk/snyk@1.1.2

executors:
  go:
    docker:
      - image: 'circleci/go-service:0.1-dev'
        auth:
          username: $RO_DOCKER_HUB_USERNAME
          password: $RO_DOCKER_HUB_PASSWORD
jobs:
  lint:
    executor: go
    steps:
      - checkout
      - run: task lint
      - run: task check-go-mod
  security-scans:
    docker:
      - image: cimg/go:1.18
    steps:
      - checkout
      - run: git config --global url."https://$GITHUB_USER:$GITHUB_TOKEN@github.com/circleci/".insteadOf "https://github.com/circleci/"
      - when:
          condition:
            equal: [ main, << pipeline.git.branch >> ]
          steps:
            - run:
                name: Running snyk CLI on main branch; uploading results
                command: echo "We are running snyk scan and uploading the results"
            - snyk/scan:
                fail-on-issues: false
                severity-threshold: high
                monitor-on-build: true
                project: 'circleci/${CIRCLE_PROJECT_REPONAME}'
                organization: circleci-78h
      - unless:
          condition:
            equal: [ main, << pipeline.git.branch >> ]
          steps:
            - run:
                name: Running snyk CLI on branch; no results uploading
                command: >-
                  echo "We are running snyk scan locally and NOT uploading the
                  branch scan results"
            - snyk/scan:
                fail-on-issues: false
                severity-threshold: high
                monitor-on-build: false
                project: 'circleci/${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BRANCH}'
                organization: circleci-78h
  test:
    executor: go
    steps:
      - checkout
      - run: 'task ci:test RESULTS_DIR=/tmp/test-results'
      - run:
          name: Generate coverage report
          command: |
            go test ./... -coverprofile=coverage.out
            go tool cover -html=coverage.out -o coverage.html
            mv coverage.html /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
      - store_test_results:
          path: /tmp/test-results
  publish:
    executor: go
    steps:
      - add_ssh_keys:
          fingerprints:
            - '69:50:2f:53:40:38:a7:9c:42:1c:1e:6e:3e:fe:90:aa'
      - checkout
      - run:
          name: Set version
          command: |
            patch_version="${CIRCLE_BUILD_NUM}"
            echo "export POLICY_AGENT_VERSION=0.0.1-$patch_version" >> "${BASH_ENV}"
      - run:
          name: Tag the release
          command: |
            git config user.email "securityengineering@circleci.com"
            git config user.name "Security-Engineering Bot"
            # Go expects version semantic tags to start with "v".
            git tag "v$POLICY_AGENT_VERSION"
            git push --tags
workflows:
  publish:
    jobs:
      - lint:
          context: dockerhub-readonly
      - test:
          context: dockerhub-readonly
      - security-scans:
          context: dockerhub-readonly
      - publish:
          context: dockerhub-readonly
          requires:
            - lint
            - test
          filters:
            branches:
              only:
                - main
