version: 2.1
orbs:
  aws-s3: circleci/aws-s3@3.1.1

jobs:
  prettier:
    docker:
      - image: cimg/node:16.18.1
    steps:
      - checkout
      - run:
          name: Install Prettier
          command: npm install -g prettier@2.7.1
      - run:
          name: Run Prettier check
          command: npx prettier --check .

  build:
    docker:
      - image: cimg/node:16.18.1
    working_directory: ~/repo
    steps:
      # Required to access GitHub repositories, see https://circleci.com/docs/github-integration/#controlling-access-via-a-machine-user
      - add_ssh_keys:
          fingerprints:
            - â€œxxxx" #circlecimachineuser
      - checkout
      - restore_cache:
          keys:
            - project-name-{{ checksum "package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - project-name-end-dependencies-
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
            - ~/.npm
            - ~/.cache
          key: project-name-end-dependencies-{{ checksum "package-lock.json" }}
      # - run: npm run test
      - run:
          name: Build using development variables
          command: npm run build:development
      - persist_to_workspace:
          root: ~/repo
          paths:
            - build # points to the build folder

  deploy:
    docker:
      - image: cimg/python:3.10 # https://circleci.com/developer/orbs/orb/circleci/aws-s3
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - aws-s3/sync:
          from: build
          to: "s3://project-front-end-development"
          arguments: |
            --cache-control "max-age=86400" \
            --delete

workflows:
  DEV-build-deploy:
    jobs:
      - prettier:
          filters:
            branches:
              only: develop
      - build:
          requires:
            - prettier
          filters:
            branches:
              only: develop
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: develop
          context:
            - front-end-dev
  PR-code-formatting:
    jobs:
      - prettier:
          filters:
            branches:
              ignore: [main, develop]