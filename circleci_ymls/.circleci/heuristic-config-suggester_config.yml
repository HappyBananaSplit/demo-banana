version: "2.1"

orbs:
  slack: circleci/slack@4.5.0

references:
  test_db_image: &test_db_image
    image: postgres:13.3-alpine
    environment:
      POSTGRES_USER: test
      POSTGRES_DB: heuristicconfigsuggester
      POSTGRES_HOST_AUTH_METHOD: trust

  clojure_image: &clojure_image
    image: circleci/clojure-service:0.7-dev
    auth:
      username: $DOCKER_HUB_USER
      password: $DOCKER_HUB_PASSWORD

executors:
  clojure:
    docker:
      - image: circleci/clojure-service:0.7-dev
        auth:
          username: $DOCKER_HUB_USER
          password: $DOCKER_HUB_PASSWORD

  ccc:
    docker:
      - image: circleci/command-convenience:0.1
        auth:
          username: $DOCKER_HUB_USER
          password: $DOCKER_HUB_PASSWORD
        environment:
          NAME: heuristic-config-suggester
          DEPLOY_TYPE: helm
          DEPLOY_CONTAINER_NAME: 183081753049.dkr.ecr.us-east-1.amazonaws.com/circleci/heuristic-config-suggester

  integration:
    docker:
      - *clojure_image
      - *test_db_image
    environment:
      POSTGRESQL__HEURISTICCONFIGSUGGESTER__URI: jdbc:postgresql://localhost:5432/heuristicconfigsuggester?user=test
      FLYWAY_DB_URL: jdbc:postgresql://localhost:5432/heuristicconfigsuggester

commands:
  save-deps:
    steps:
      - save_cache:
          key: deps-v1-{{ checksum "project.clj" }}
          paths:
            - ~/.m2

  restore-deps:
    steps:
      - restore_cache:
          keys:
            - deps-v1-{{ checksum "project.clj" }}

  persist-target:
    steps:
      - persist_to_workspace:
          root: .
          paths:
            - target

  attach_target:
    steps:
      - attach_workspace:
          at: .

  notify-on-deploy-fail:
    steps:
      - slack/notify:
          channel: C028KFG8T70
          event: fail
          custom: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "heuristic-config-suggester deploy job failed :red_circle:",
                    "emoji": true
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Job"
                      },
                      "url": "${CIRCLE_BUILD_URL}"
                    }
                  ]
                }
              ]
            }

jobs:
  build-cache:
    executor: clojure
    steps:
      - checkout
      - restore-deps
      - run:
          name: Compile the code
          command: lein javac
      - save-deps
      - persist-target

  build-uberjar:
    executor: clojure
    steps:
      - checkout
      - run:
          name: Build Uberjar
          command: |
            lein uberjar
            cp -v target/uberjar/heuristic-config-suggester-*-standalone.jar target/uberjar/heuristic-config-suggester.jar
      - persist_to_workspace:
          root: .
          paths:
            - target/uberjar/heuristic-config-suggester.jar

  test:
    executor: integration
    steps:
      - checkout
      - restore-deps
      - attach_target
      - run:
          name: Run db migrations
          command: lein with-profile +test flyway migrate
      - run:
          name: Run automated tests
          command: |
            lein with-profile +test kaocha
      - store_test_results:
          path: test-results

  dry-run-service:
    executor: ccc
    environment:
      NAME: heuristic-config-suggester
      VALUES_FILE: values.yml
    steps:
      - checkout
      - setup_remote_docker
      - run: /deploy/dry-run

  publish-and-deploy-service:
    executor: ccc
    environment:
      NAME: heuristic-config-suggester
      VALUES_FILE: values.yml
      DOCKER_REGISTRY: ecr
      DOCKERFILE_PATH: server.Dockerfile
    steps:
      - checkout
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run: publish
      - run: deploy
      - notify-on-deploy-fail

  publish-and-deploy-migrator:
    executor: ccc
    environment:
      NAME: heuristic-config-suggester-migrator
      VALUES_FILE: migrator-values.yml
      DOCKER_REGISTRY: ecr
      DEPLOY_CONTAINER_NAME: 183081753049.dkr.ecr.us-east-1.amazonaws.com/circleci/heuristic-config-suggester-migrator
      MIGRATIONS_SQL_PATH: migrations
      ROLLBAR_ACCESS_TOKEN: "" # Prevent CCC from notifying Rollbar when migrator is deployed.
    steps:
      - checkout
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run: publish
      - run: deploy
      - notify-on-deploy-fail

  deploy-client:
    executor: clojure
    steps:
      - checkout
      - restore-deps
      - attach_target
      - run:
          name: Deploy client
          command: |
            lein deploy circle-s3
          working_directory: client
      - notify-on-deploy-fail

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build-cache:
          context: org-global
      - build-uberjar:
          context: org-global
          requires:
            - build-cache
      - test:
          context: org-global
          requires:
            - build-cache
      - dry-run-service:
          context: org-global
          requires:
            - build-cache
      - publish-and-deploy-migrator:
          context:
            - org-global
            - slack-notifications
          requires:
            - test
            - build-uberjar
          filters:
            branches:
              only: main
      - publish-and-deploy-service:
          context:
            - org-global
            - slack-notifications
          requires:
            - publish-and-deploy-migrator
          filters:
            branches:
              only: main
      - deploy-client:
          context:
            - org-global
            - slack-notifications
          requires:
            - publish-and-deploy-service
